version: "3.8"

services:
  user_db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: user_db
    ports:
      - "5432:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
      - ./init/user/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  order_db:
    image: postgres:15
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: orderpass
      POSTGRES_DB: order_db
    ports:
      - "5433:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
      - ./init/order/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  user_service:
    image: user_service:local
    ports:
      - "8000:8000"
    environment:
      DB_HOST: user_db
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: userpass
      DB_NAME: user_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  order_service:
    image: order_service:local
    ports:
      - "8001:8001"
    environment:
      DB_HOST: order_db
      DB_PORT: 5432
      DB_USER: order
      DB_PASSWORD: orderpass
      DB_NAME: order_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: >
      bash -c "
      uvicorn app:app --host 0.0.0.0 --port 8001 &
      python consumer.py
      "
    networks:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  frontend:
    image: frontend:local
    ports:
      - "8080:80"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  user_data:
  order_data:

networks:
  backend:
    driver: overlay
